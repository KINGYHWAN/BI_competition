{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"collapsed_sections":["MzIL2h012cUs","HTbTqkSp2X8-","F5JCGyi-wwbW","6zwY82HKcriC"],"mount_file_id":"13juMDHb914-xXCgACshyA9fSYLrKVose","authorship_tag":"ABX9TyPKJw2jFJ8FtONQ68d0u5fI"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"rSnOp-ZYqCpS"},"outputs":[],"source":["import pandas as pd\n","import numpy as np\n","from datetime import datetime, timedelta\n","import warnings\n","warnings.filterwarnings(\"ignore\")"]},{"cell_type":"code","source":["# 전력시장 거래량, 한전 PPA, 자가용 태양광\n","entire_df=pd.read_excel('/content/drive/MyDrive/2023 겨울학기 + 여름학기/B.I Contest/데이터/태양량 관련/restart/연 > 월 미계량 데이터 구하기/HOME_전력거래_시장참여설비용량(전력시장·PPA)_회원사별.xlsx')\n","\n","# 전력시장, 한전_PPA, 자가용 태양광 3개 컬럼 연-월별로 갖는데이터17년1월 ~ 23년 3월\n","yearly_PPA_df=pd.read_csv('/content/drive/MyDrive/2023 겨울학기 + 여름학기/B.I Contest/데이터/태양량 관련/restart/연 > 월 미계량 데이터 구하기/한국전력공사_발전원별 PPA 계약현황_20201008.csv')"],"metadata":{"id":"PFdr4ZfRqK8U"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# 데이터프레임 가공하기\n","\n","- entire_df 필요 칼럼만 추출 , fillna(0)\n","\n","- yearly_PPA_df 비율 적용"],"metadata":{"id":"MzIL2h012cUs"}},{"cell_type":"code","source":["# 특정 칼럼 버리고 전력시장, PPA 만 남겨놓고 entire_df\n","\n","entire_df.drop(['지역', '한수원', '남동발전', '중부발전', '서부발전', '남부발전', '동서발전', '기타'], axis=1, inplace=True)\n","entire_df['기간'] = pd.to_datetime(entire_df['기간'])\n","entire_df=entire_df[entire_df['기간'].isin(pd.date_range('2012-01-01', '2023-04-01'))]\n","entire_df.fillna(0)\n","entire_df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"VYWEvAgduzcg","executionInfo":{"status":"ok","timestamp":1687762918197,"user_tz":-540,"elapsed":4,"user":{"displayName":"정민균","userId":"02008085652330605669"}},"outputId":"e227f888-75b3-4caa-b5f4-e39852bfe67f"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["            기간      전력시장 계      PPA 계  전력시장+PPA 계\n","1   2023-04-01  133542.439  15041.874  148584.313\n","2   2023-03-01  133125.711  14925.557  148051.268\n","3   2023-02-01  132348.041  14799.864  147147.905\n","4   2023-01-01  130989.136  14678.139  145667.275\n","5   2022-12-01  130551.357  14622.255  145173.612\n","..         ...         ...        ...         ...\n","132 2012-05-01   80792.449        NaN   80792.449\n","133 2012-04-01   80726.252        NaN   80726.252\n","134 2012-03-01   80935.516        NaN   80935.516\n","135 2012-02-01   80912.532        NaN   80912.532\n","136 2012-01-01   80903.942        NaN   80903.942\n","\n","[136 rows x 4 columns]"],"text/html":["\n","  <div id=\"df-10d83ef7-4a0e-4e08-b2d1-80662d8c0ae7\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>기간</th>\n","      <th>전력시장 계</th>\n","      <th>PPA 계</th>\n","      <th>전력시장+PPA 계</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1</th>\n","      <td>2023-04-01</td>\n","      <td>133542.439</td>\n","      <td>15041.874</td>\n","      <td>148584.313</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2023-03-01</td>\n","      <td>133125.711</td>\n","      <td>14925.557</td>\n","      <td>148051.268</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2023-02-01</td>\n","      <td>132348.041</td>\n","      <td>14799.864</td>\n","      <td>147147.905</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2023-01-01</td>\n","      <td>130989.136</td>\n","      <td>14678.139</td>\n","      <td>145667.275</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>2022-12-01</td>\n","      <td>130551.357</td>\n","      <td>14622.255</td>\n","      <td>145173.612</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>132</th>\n","      <td>2012-05-01</td>\n","      <td>80792.449</td>\n","      <td>NaN</td>\n","      <td>80792.449</td>\n","    </tr>\n","    <tr>\n","      <th>133</th>\n","      <td>2012-04-01</td>\n","      <td>80726.252</td>\n","      <td>NaN</td>\n","      <td>80726.252</td>\n","    </tr>\n","    <tr>\n","      <th>134</th>\n","      <td>2012-03-01</td>\n","      <td>80935.516</td>\n","      <td>NaN</td>\n","      <td>80935.516</td>\n","    </tr>\n","    <tr>\n","      <th>135</th>\n","      <td>2012-02-01</td>\n","      <td>80912.532</td>\n","      <td>NaN</td>\n","      <td>80912.532</td>\n","    </tr>\n","    <tr>\n","      <th>136</th>\n","      <td>2012-01-01</td>\n","      <td>80903.942</td>\n","      <td>NaN</td>\n","      <td>80903.942</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>136 rows × 4 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-10d83ef7-4a0e-4e08-b2d1-80662d8c0ae7')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-10d83ef7-4a0e-4e08-b2d1-80662d8c0ae7 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-10d83ef7-4a0e-4e08-b2d1-80662d8c0ae7');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":95}]},{"cell_type":"code","source":["yearly_PPA_df=yearly_PPA_df[yearly_PPA_df['년도']>=2012]\n","yearly_PPA_df.drop(['발전원','사업자수'], axis=1,inplace=True)\n","yearly_PPA=yearly_PPA_df.groupby('년도').sum()\n","\n","# entire_df 와 yearly_PPA_df 사이의 비율을 구해서 2012~2023 기간의 PPA 값을 구했음\n","\n","# 비율이 0.012909245821711....\n","yearly_PPA['설비용량']*=0.012909\n","yearly_PPA.reset_index(drop=False, inplace=True)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"AzpkOGTdrwih","executionInfo":{"status":"ok","timestamp":1687762919656,"user_tz":-540,"elapsed":3,"user":{"displayName":"정민균","userId":"02008085652330605669"}},"outputId":"37391943-8b34-4123-9e4d-575e68e40efe"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-97-8ec242752155>:2: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  yearly_PPA_df.drop(['발전원','사업자수'], axis=1,inplace=True)\n"]}]},{"cell_type":"markdown","source":["# 월단위로 바꾸기\n","\n","- entire_df에서 받와서 전력시장 비율화\n","\n","- 이후 yearly_PPA 비율에 곱해서 데이터프레임 재구성\n"],"metadata":{"id":"HTbTqkSp2X8-"}},{"cell_type":"code","source":["PPA_df=entire_df[entire_df['기간'].isin(pd.date_range('2020-01-01', '2023-12-31')) ]"],"metadata":{"id":"fTwNoUpI3jU3"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# 월별 PPA를 만들어서 넣어줌\n","\n","Pl=[]\n","\n","for year in [2019,2018,2017,2016,2015,2014,2013,2012]:\n","  weight=entire_df.query('기간.dt.year == @year')\n","  x=weight.sum()['전력시장 계']\n","  weight['전력시장 계']/=x\n","\n","  PPA=yearly_PPA[yearly_PPA['년도']==year]\n","  weight['PPA 계']=weight['전력시장 계']*PPA.loc[year-2012, '설비용량']\n","\n","  PPA_df=pd.concat([PPA_df, weight],axis=0)\n","\n","  Pl.append(PPA.loc[year-2012, '설비용량'])\n","\n","PPA_df"],"metadata":{"id":"JNDO6KPzxmXy","colab":{"base_uri":"https://localhost:8080/","height":1000},"executionInfo":{"status":"ok","timestamp":1687762922896,"user_tz":-540,"elapsed":463,"user":{"displayName":"정민균","userId":"02008085652330605669"}},"outputId":"d10d9a0e-7656-4211-dfc0-2586663b27fd"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-99-238a45db8175>:5: FutureWarning: The default value of numeric_only in DataFrame.sum is deprecated. In a future version, it will default to False. In addition, specifying 'numeric_only=None' is deprecated. Select only valid columns or specify the value of numeric_only to silence this warning.\n","  x=weight.sum()['전력시장 계']\n","<ipython-input-99-238a45db8175>:6: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  weight['전력시장 계']/=x\n","<ipython-input-99-238a45db8175>:9: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  weight['PPA 계']=weight['전력시장 계']*PPA.loc[year-2012, '설비용량']\n","<ipython-input-99-238a45db8175>:5: FutureWarning: The default value of numeric_only in DataFrame.sum is deprecated. In a future version, it will default to False. In addition, specifying 'numeric_only=None' is deprecated. Select only valid columns or specify the value of numeric_only to silence this warning.\n","  x=weight.sum()['전력시장 계']\n","<ipython-input-99-238a45db8175>:6: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  weight['전력시장 계']/=x\n","<ipython-input-99-238a45db8175>:9: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  weight['PPA 계']=weight['전력시장 계']*PPA.loc[year-2012, '설비용량']\n","<ipython-input-99-238a45db8175>:5: FutureWarning: The default value of numeric_only in DataFrame.sum is deprecated. In a future version, it will default to False. In addition, specifying 'numeric_only=None' is deprecated. Select only valid columns or specify the value of numeric_only to silence this warning.\n","  x=weight.sum()['전력시장 계']\n","<ipython-input-99-238a45db8175>:6: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  weight['전력시장 계']/=x\n","<ipython-input-99-238a45db8175>:9: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  weight['PPA 계']=weight['전력시장 계']*PPA.loc[year-2012, '설비용량']\n","<ipython-input-99-238a45db8175>:5: FutureWarning: The default value of numeric_only in DataFrame.sum is deprecated. In a future version, it will default to False. In addition, specifying 'numeric_only=None' is deprecated. Select only valid columns or specify the value of numeric_only to silence this warning.\n","  x=weight.sum()['전력시장 계']\n","<ipython-input-99-238a45db8175>:6: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  weight['전력시장 계']/=x\n","<ipython-input-99-238a45db8175>:9: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  weight['PPA 계']=weight['전력시장 계']*PPA.loc[year-2012, '설비용량']\n","<ipython-input-99-238a45db8175>:5: FutureWarning: The default value of numeric_only in DataFrame.sum is deprecated. In a future version, it will default to False. In addition, specifying 'numeric_only=None' is deprecated. Select only valid columns or specify the value of numeric_only to silence this warning.\n","  x=weight.sum()['전력시장 계']\n","<ipython-input-99-238a45db8175>:6: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  weight['전력시장 계']/=x\n","<ipython-input-99-238a45db8175>:9: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  weight['PPA 계']=weight['전력시장 계']*PPA.loc[year-2012, '설비용량']\n","<ipython-input-99-238a45db8175>:5: FutureWarning: The default value of numeric_only in DataFrame.sum is deprecated. In a future version, it will default to False. In addition, specifying 'numeric_only=None' is deprecated. Select only valid columns or specify the value of numeric_only to silence this warning.\n","  x=weight.sum()['전력시장 계']\n","<ipython-input-99-238a45db8175>:6: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  weight['전력시장 계']/=x\n","<ipython-input-99-238a45db8175>:9: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  weight['PPA 계']=weight['전력시장 계']*PPA.loc[year-2012, '설비용량']\n","<ipython-input-99-238a45db8175>:5: FutureWarning: The default value of numeric_only in DataFrame.sum is deprecated. In a future version, it will default to False. In addition, specifying 'numeric_only=None' is deprecated. Select only valid columns or specify the value of numeric_only to silence this warning.\n","  x=weight.sum()['전력시장 계']\n","<ipython-input-99-238a45db8175>:6: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  weight['전력시장 계']/=x\n","<ipython-input-99-238a45db8175>:9: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  weight['PPA 계']=weight['전력시장 계']*PPA.loc[year-2012, '설비용량']\n","<ipython-input-99-238a45db8175>:5: FutureWarning: The default value of numeric_only in DataFrame.sum is deprecated. In a future version, it will default to False. In addition, specifying 'numeric_only=None' is deprecated. Select only valid columns or specify the value of numeric_only to silence this warning.\n","  x=weight.sum()['전력시장 계']\n","<ipython-input-99-238a45db8175>:6: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  weight['전력시장 계']/=x\n","<ipython-input-99-238a45db8175>:9: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  weight['PPA 계']=weight['전력시장 계']*PPA.loc[year-2012, '설비용량']\n"]},{"output_type":"execute_result","data":{"text/plain":["            기간         전력시장 계         PPA 계  전력시장+PPA 계\n","1   2023-04-01  133542.439000  15041.874000  148584.313\n","2   2023-03-01  133125.711000  14925.557000  148051.268\n","3   2023-02-01  132348.041000  14799.864000  147147.905\n","4   2023-01-01  130989.136000  14678.139000  145667.275\n","5   2022-12-01  130551.357000  14622.255000  145173.612\n","..         ...            ...           ...         ...\n","132 2012-05-01       0.082440    329.560481   80792.449\n","133 2012-04-01       0.082373    329.290456   80726.252\n","134 2012-03-01       0.082586    330.144065   80935.516\n","135 2012-02-01       0.082563    330.050311   80912.532\n","136 2012-01-01       0.082554    330.015272   80903.942\n","\n","[136 rows x 4 columns]"],"text/html":["\n","  <div id=\"df-7265888d-7374-427a-a0fb-4e2647ce2485\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>기간</th>\n","      <th>전력시장 계</th>\n","      <th>PPA 계</th>\n","      <th>전력시장+PPA 계</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1</th>\n","      <td>2023-04-01</td>\n","      <td>133542.439000</td>\n","      <td>15041.874000</td>\n","      <td>148584.313</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2023-03-01</td>\n","      <td>133125.711000</td>\n","      <td>14925.557000</td>\n","      <td>148051.268</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2023-02-01</td>\n","      <td>132348.041000</td>\n","      <td>14799.864000</td>\n","      <td>147147.905</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2023-01-01</td>\n","      <td>130989.136000</td>\n","      <td>14678.139000</td>\n","      <td>145667.275</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>2022-12-01</td>\n","      <td>130551.357000</td>\n","      <td>14622.255000</td>\n","      <td>145173.612</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>132</th>\n","      <td>2012-05-01</td>\n","      <td>0.082440</td>\n","      <td>329.560481</td>\n","      <td>80792.449</td>\n","    </tr>\n","    <tr>\n","      <th>133</th>\n","      <td>2012-04-01</td>\n","      <td>0.082373</td>\n","      <td>329.290456</td>\n","      <td>80726.252</td>\n","    </tr>\n","    <tr>\n","      <th>134</th>\n","      <td>2012-03-01</td>\n","      <td>0.082586</td>\n","      <td>330.144065</td>\n","      <td>80935.516</td>\n","    </tr>\n","    <tr>\n","      <th>135</th>\n","      <td>2012-02-01</td>\n","      <td>0.082563</td>\n","      <td>330.050311</td>\n","      <td>80912.532</td>\n","    </tr>\n","    <tr>\n","      <th>136</th>\n","      <td>2012-01-01</td>\n","      <td>0.082554</td>\n","      <td>330.015272</td>\n","      <td>80903.942</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>136 rows × 4 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7265888d-7374-427a-a0fb-4e2647ce2485')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-7265888d-7374-427a-a0fb-4e2647ce2485 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-7265888d-7374-427a-a0fb-4e2647ce2485');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":99}]},{"cell_type":"markdown","source":["# 연_월 단위 PPA 데이터\n","\n","- PPA_DF"],"metadata":{"id":"F5JCGyi-wwbW"}},{"cell_type":"code","source":["import pandas as pd"],"metadata":{"id":"783DyTbOw19h"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["PPA_data=pd.read_csv('/content/drive/MyDrive/2023 겨울학기 + 여름학기/B.I Contest/데이터/태양량 관련/restart/연 > 월 미계량 데이터 구하기/연_월_PPA.csv')\n","PPA_data=PPA_data[['기간','비계량 계']]"],"metadata":{"id":"7lrYIHFRxCBr"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# 시장거래 태양광 값\n","\n","- 2013-01-01 00:00 ~ 2023-02-28 23:00 까지 정리\n","\n","- sunPow_df"],"metadata":{"id":"apredYv_RjLz"}},{"cell_type":"code","source":["# 시장 거래 태양광 값이 시간단위로 2013~2017, 2017~2023 2월 , 2023 3월 이렇게 나눠져 있어서 잘 병합할 예정\n","\n","past_df=pd.read_csv('/content/drive/MyDrive/2023 겨울학기 + 여름학기/B.I Contest/데이터/태양량 관련/restart/연 > 월 미계량 데이터 구하기/2013_2017.csv')\n","pres_df=pd.read_csv('/content/drive/MyDrive/2023 겨울학기 + 여름학기/B.I Contest/데이터/태양량 관련/restart/연 > 월 미계량 데이터 구하기/2017_2023.csv')\n","futu_df=pd.read_csv('/content/drive/MyDrive/2023 겨울학기 + 여름학기/B.I Contest/데이터/태양량 관련/restart/연 > 월 미계량 데이터 구하기/2023_2023.csv', encoding='cp949')"],"metadata":{"id":"rObvRg_pRoa6"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["pres_df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"aI9K87FD9XK6","executionInfo":{"status":"ok","timestamp":1688777099195,"user_tz":-540,"elapsed":5,"user":{"displayName":"정민균","userId":"02008085652330605669"}},"outputId":"258ff0a8-f079-4a2b-9e1b-2ff7163c2863"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["             거래일자  거래시간   지역   태양광 발전량(MWh) \n","0        2017.1.1     1  경기도            0.00\n","1        2017.1.1     2  경기도            0.00\n","2        2017.1.1     3  경기도            0.00\n","3        2017.1.1     4  경기도            0.00\n","4        2017.1.1     5  경기도            0.00\n","...           ...   ...  ...             ...\n","917995  2023.2.28    20  부산시            3.59\n","917996  2023.2.28    21  부산시            3.46\n","917997  2023.2.28    22  부산시            2.71\n","917998  2023.2.28    23  부산시            0.82\n","917999  2023.2.28    24  부산시            0.18\n","\n","[918000 rows x 4 columns]"],"text/html":["\n","  <div id=\"df-a4623aa4-945b-4313-864e-bc9e5ff9a1a9\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>거래일자</th>\n","      <th>거래시간</th>\n","      <th>지역</th>\n","      <th>태양광 발전량(MWh)</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2017.1.1</td>\n","      <td>1</td>\n","      <td>경기도</td>\n","      <td>0.00</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2017.1.1</td>\n","      <td>2</td>\n","      <td>경기도</td>\n","      <td>0.00</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2017.1.1</td>\n","      <td>3</td>\n","      <td>경기도</td>\n","      <td>0.00</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2017.1.1</td>\n","      <td>4</td>\n","      <td>경기도</td>\n","      <td>0.00</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2017.1.1</td>\n","      <td>5</td>\n","      <td>경기도</td>\n","      <td>0.00</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>917995</th>\n","      <td>2023.2.28</td>\n","      <td>20</td>\n","      <td>부산시</td>\n","      <td>3.59</td>\n","    </tr>\n","    <tr>\n","      <th>917996</th>\n","      <td>2023.2.28</td>\n","      <td>21</td>\n","      <td>부산시</td>\n","      <td>3.46</td>\n","    </tr>\n","    <tr>\n","      <th>917997</th>\n","      <td>2023.2.28</td>\n","      <td>22</td>\n","      <td>부산시</td>\n","      <td>2.71</td>\n","    </tr>\n","    <tr>\n","      <th>917998</th>\n","      <td>2023.2.28</td>\n","      <td>23</td>\n","      <td>부산시</td>\n","      <td>0.82</td>\n","    </tr>\n","    <tr>\n","      <th>917999</th>\n","      <td>2023.2.28</td>\n","      <td>24</td>\n","      <td>부산시</td>\n","      <td>0.18</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>918000 rows × 4 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a4623aa4-945b-4313-864e-bc9e5ff9a1a9')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-a4623aa4-945b-4313-864e-bc9e5ff9a1a9 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-a4623aa4-945b-4313-864e-bc9e5ff9a1a9');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":7}]},{"cell_type":"code","source":["# 거래일자의 형식을 'YYYY-MM-DD'로 변환\n","past_df['거래일자'] = pd.to_datetime(past_df['거래일자'], format='%Y.%m.%d')\n","\n","# 거래시간의 형식을 'HH:MM'으로 변환하고 '시간' 열에 저장\n","past_df['시간'] = past_df['거래일자'].dt.strftime('%Y-%m-%d') + ' ' + past_df['거래시간'].apply(lambda x: '{:02d}:00'.format(x))\n","\n","past_df.drop(['지역','거래일자','거래시간'], axis=1, inplace=True)\n","\n","past_df = past_df[['시간',' 태양광 발전량(MWh) ']]\n","\n","# 거래일자의 형식을 'YYYY-MM-DD'로 변환\n","pres_df['거래일자'] = pd.to_datetime(pres_df['거래일자'], format='%Y.%m.%d')\n","\n","# 거래시간의 형식을 'HH:MM'으로 변환하고 '시간' 열에 저장\n","pres_df['시간'] = pres_df['거래일자'].dt.strftime('%Y-%m-%d') + ' ' + pres_df['거래시간'].apply(lambda x: '{:02d}:00'.format(x-1))\n","\n","pres_df.drop(['지역','거래일자','거래시간'], axis=1, inplace=True)\n","\n","pres_df = pres_df[['시간',' 태양광 발전량(MWh) ']]\n","\n","# 거래일자의 형식을 'YYYY-MM-DD'로 변환\n","futu_df['거래일자'] = pd.to_datetime(futu_df['거래일자'], format='%Y-%m-%d')\n","\n","# 거래시간의 형식을 'HH:MM'으로 변환하고 '시간' 열에 저장\n","futu_df['시간'] = futu_df['거래일자'].dt.strftime('%Y-%m-%d') + ' ' + futu_df['거래시간'].apply(lambda x: '{:02d}:00'.format(x-1))\n","\n","futu_df.drop(['지역','거래일자','거래시간','  풍력 발전량(MWh)  '], axis=1, inplace=True)\n","\n","futu_df = futu_df[['시간','  태양광 발전량(MWh)  ']]"],"metadata":{"id":"pVFMkA2KSZA8"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# '시간' 열에 연-월-일 시간 형식으로 바꾼다음에 인덱스 초기화하기\n","past_df_grouped = past_df.groupby('시간').sum().reset_index()\n","pres_df_grouped = pres_df.groupby('시간').sum().reset_index()\n","futu_df_grouped = futu_df.groupby('시간').sum().reset_index()\n","\n","# 실제 pres_df는 2017~2023 까지 있어서 past_df와 겹치니 2018부터만 가져오는 작업\n","pres_df_grouped['시간'] = pd.to_datetime(pres_df_grouped['시간'])\n","pres_df_grouped = pres_df_grouped[pres_df_grouped['시간'].dt.year >= 2018]\n","pres_df_grouped.reset_index(inplace=True, drop=True)\n","\n","# 23년 3월 데이터만 가져오기\n","futu_df_grouped['시간'] = pd.to_datetime(futu_df_grouped['시간'])\n","futu_df_grouped = futu_df_grouped[futu_df_grouped['시간'].dt.month == 3]\n","futu_df_grouped.reset_index(inplace=True, drop=True)"],"metadata":{"id":"LI_8C1s7WnFY"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# 전부  합해서 sunPow_df로 저장\n","\n","past_df_grouped.columns=['시간', '태양광 발전량(MWh)']\n","pres_df_grouped.columns=['시간', '태양광 발전량(MWh)']\n","futu_df_grouped.columns=['시간', '태양광 발전량(MWh)']\n","\n","sunPow_df=pd.concat([past_df_grouped, pres_df_grouped, futu_df_grouped], axis=0)\n","\n","sunPow_df.to_csv('/content/drive/MyDrive/2023 겨울학기 + 여름학기/B.I Contest/데이터/태양량 관련/2023_03_만들기/sunPow_df.csv')\n","\n","sunPow_df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"dkJBm8YE_GkJ","executionInfo":{"status":"ok","timestamp":1688777605539,"user_tz":-540,"elapsed":4,"user":{"displayName":"정민균","userId":"02008085652330605669"}},"outputId":"47296277-6b4e-46c0-939c-6d3b9fdeec66"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                      시간  태양광 발전량(MWh)\n","0       2013-01-01 00:00      0.000000\n","1       2013-01-01 01:00      0.000000\n","2       2013-01-01 02:00      0.000000\n","3       2013-01-01 03:00      0.000000\n","4       2013-01-01 04:00      0.000000\n","..                   ...           ...\n","739  2023-03-31 19:00:00    947.420543\n","740  2023-03-31 20:00:00    899.068525\n","741  2023-03-31 21:00:00    680.299808\n","742  2023-03-31 22:00:00    283.671460\n","743  2023-03-31 23:00:00     95.831145\n","\n","[89808 rows x 2 columns]"],"text/html":["\n","  <div id=\"df-258e66ca-9aae-497c-9997-317172dae1dc\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>시간</th>\n","      <th>태양광 발전량(MWh)</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2013-01-01 00:00</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2013-01-01 01:00</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2013-01-01 02:00</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2013-01-01 03:00</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2013-01-01 04:00</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>739</th>\n","      <td>2023-03-31 19:00:00</td>\n","      <td>947.420543</td>\n","    </tr>\n","    <tr>\n","      <th>740</th>\n","      <td>2023-03-31 20:00:00</td>\n","      <td>899.068525</td>\n","    </tr>\n","    <tr>\n","      <th>741</th>\n","      <td>2023-03-31 21:00:00</td>\n","      <td>680.299808</td>\n","    </tr>\n","    <tr>\n","      <th>742</th>\n","      <td>2023-03-31 22:00:00</td>\n","      <td>283.671460</td>\n","    </tr>\n","    <tr>\n","      <th>743</th>\n","      <td>2023-03-31 23:00:00</td>\n","      <td>95.831145</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>89808 rows × 2 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-258e66ca-9aae-497c-9997-317172dae1dc')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-258e66ca-9aae-497c-9997-317172dae1dc button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-258e66ca-9aae-497c-9997-317172dae1dc');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":28}]},{"cell_type":"markdown","source":["# PPA 시간단위로 분해\n","\n","- sun_hourly_df"],"metadata":{"id":"6zwY82HKcriC"}},{"cell_type":"code","source":["PPA_df=pd.read_csv('/content/drive/MyDrive/2023 겨울학기 + 여름학기/B.I Contest/데이터/태양량 관련/restart/연 > 월 미계량 데이터 구하기/PPA_df.csv',encoding='cp949', index_col=0)"],"metadata":{"id":"IEDvxg1wcSg2"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# 기상 정보때 전력거래량 곱하듯 진행해주기\n","\n","sun_hourly_df=pd.DataFrame()\n","\n","for year in [2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022]:\n","  for month in [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]:\n","    sunPow_df['시간'] = pd.to_datetime(sunPow_df['시간'])\n","    PPA_df['기간'] = pd.to_datetime(PPA_df['기간'])\n","\n","    ndf=sunPow_df.query('시간.dt.year == @year and 시간.dt.month == @month')\n","\n","    test=PPA_df.query('기간.dt.year == @year and 기간.dt.month == @month')\n","\n","    wei=float(test.iloc[0,1])\n","    sum=ndf['태양광 발전량(MWh)'].sum()\n","\n","    ndf['태양광 발전량(MWh)']=ndf['태양광 발전량(MWh)'] / sum * wei\n","\n","    sun_hourly_df=pd.concat([sun_hourly_df, ndf], axis=0)\n","\n","year=2023\n","for month in [1, 2, 3]:\n","    sunPow_df['시간'] = pd.to_datetime(sunPow_df['시간'])\n","    PPA_df['기간'] = pd.to_datetime(PPA_df['기간'])\n","\n","    ndf=sunPow_df.query('시간.dt.year == @year and 시간.dt.month == @month')\n","\n","    test=PPA_df.query('기간.dt.year == @year and 기간.dt.month == @month')\n","\n","    wei=float(test.iloc[0,1])\n","    sum=ndf['태양광 발전량(MWh)'].sum()\n","\n","    ndf['태양광 발전량(MWh)']=ndf['태양광 발전량(MWh)'] / sum * wei\n","\n","    sun_hourly_df=pd.concat([sun_hourly_df, ndf], axis=0)"],"metadata":{"id":"HiVu031dkBtv"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# 시간단위로 만들어진 것 확인\n","\n","sun_hourly_df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"iyTxCiwAlgMS","executionInfo":{"status":"ok","timestamp":1688778060769,"user_tz":-540,"elapsed":317,"user":{"displayName":"정민균","userId":"02008085652330605669"}},"outputId":"a99b8b3a-799d-4d33-880c-3ca570add6e1"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                     시간  태양광 발전량(MWh)\n","0   2013-01-01 00:00:00      0.000000\n","1   2013-01-01 01:00:00      0.000000\n","2   2013-01-01 02:00:00      0.000000\n","3   2013-01-01 03:00:00      0.000000\n","4   2013-01-01 04:00:00      0.000000\n","..                  ...           ...\n","739 2023-03-31 19:00:00     22.065561\n","740 2023-03-31 20:00:00     20.939436\n","741 2023-03-31 21:00:00     15.844281\n","742 2023-03-31 22:00:00      6.606749\n","743 2023-03-31 23:00:00      2.231921\n","\n","[89808 rows x 2 columns]"],"text/html":["\n","  <div id=\"df-7b7d67fc-93de-407f-ad73-a4dd93876c07\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>시간</th>\n","      <th>태양광 발전량(MWh)</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2013-01-01 00:00:00</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2013-01-01 01:00:00</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2013-01-01 02:00:00</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2013-01-01 03:00:00</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2013-01-01 04:00:00</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>739</th>\n","      <td>2023-03-31 19:00:00</td>\n","      <td>22.065561</td>\n","    </tr>\n","    <tr>\n","      <th>740</th>\n","      <td>2023-03-31 20:00:00</td>\n","      <td>20.939436</td>\n","    </tr>\n","    <tr>\n","      <th>741</th>\n","      <td>2023-03-31 21:00:00</td>\n","      <td>15.844281</td>\n","    </tr>\n","    <tr>\n","      <th>742</th>\n","      <td>2023-03-31 22:00:00</td>\n","      <td>6.606749</td>\n","    </tr>\n","    <tr>\n","      <th>743</th>\n","      <td>2023-03-31 23:00:00</td>\n","      <td>2.231921</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>89808 rows × 2 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7b7d67fc-93de-407f-ad73-a4dd93876c07')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-7b7d67fc-93de-407f-ad73-a4dd93876c07 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-7b7d67fc-93de-407f-ad73-a4dd93876c07');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":35}]},{"cell_type":"markdown","source":["# 미계량 태양광 값을 5분단위로 나눠보자\n","\n"],"metadata":{"id":"4liDqVoKrGoj"}},{"cell_type":"code","source":["start_date = datetime(2013, 1, 1, 0)\n","end_date = datetime(2023, 3, 31, 23)\n","\n","date_set = set()\n","current_date = start_date\n","while current_date <= end_date:\n","    date_set.add(current_date.strftime('%Y%m%d-%H'))\n","    current_date += timedelta(hours=1)"],"metadata":{"id":"dv0no4oLnQyR"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# 모든 instance를 12개로 복제시키기 (12 나눈 값으로)\n","\n","df_expanded = pd.DataFrame(np.repeat(sun_hourly_df.values, 12, axis=0), columns=sun_hourly_df.columns)\n","df_expanded['태양광 발전량(MWh)'] /= 12\n","df_expanded"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"GroaCVHgwUnD","executionInfo":{"status":"ok","timestamp":1688778078097,"user_tz":-540,"elapsed":3,"user":{"displayName":"정민균","userId":"02008085652330605669"}},"outputId":"c4383ef0-5279-4745-fa48-abd49a256847"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                         시간 태양광 발전량(MWh)\n","0       2013-01-01 00:00:00          0.0\n","1       2013-01-01 00:00:00          0.0\n","2       2013-01-01 00:00:00          0.0\n","3       2013-01-01 00:00:00          0.0\n","4       2013-01-01 00:00:00          0.0\n","...                     ...          ...\n","1077691 2023-03-31 23:00:00     0.185993\n","1077692 2023-03-31 23:00:00     0.185993\n","1077693 2023-03-31 23:00:00     0.185993\n","1077694 2023-03-31 23:00:00     0.185993\n","1077695 2023-03-31 23:00:00     0.185993\n","\n","[1077696 rows x 2 columns]"],"text/html":["\n","  <div id=\"df-07f371de-562f-420e-9310-70fdf0eb0268\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>시간</th>\n","      <th>태양광 발전량(MWh)</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2013-01-01 00:00:00</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2013-01-01 00:00:00</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2013-01-01 00:00:00</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2013-01-01 00:00:00</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2013-01-01 00:00:00</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1077691</th>\n","      <td>2023-03-31 23:00:00</td>\n","      <td>0.185993</td>\n","    </tr>\n","    <tr>\n","      <th>1077692</th>\n","      <td>2023-03-31 23:00:00</td>\n","      <td>0.185993</td>\n","    </tr>\n","    <tr>\n","      <th>1077693</th>\n","      <td>2023-03-31 23:00:00</td>\n","      <td>0.185993</td>\n","    </tr>\n","    <tr>\n","      <th>1077694</th>\n","      <td>2023-03-31 23:00:00</td>\n","      <td>0.185993</td>\n","    </tr>\n","    <tr>\n","      <th>1077695</th>\n","      <td>2023-03-31 23:00:00</td>\n","      <td>0.185993</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1077696 rows × 2 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-07f371de-562f-420e-9310-70fdf0eb0268')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-07f371de-562f-420e-9310-70fdf0eb0268 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-07f371de-562f-420e-9310-70fdf0eb0268');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":39}]},{"cell_type":"code","source":["# 이후 '시간' 칼럼을 다시 5분단위로 변환\n","\n","df_expanded['시간'] = pd.to_datetime(df_expanded['시간'])\n","\n","# 주어진 기간 생성\n","start_time = pd.to_datetime('2013-01-01 00:00:00')\n","end_time = pd.to_datetime('2023-03-31 23:55:00')\n","time_range = pd.date_range(start=start_time, end=end_time, freq='5min')\n","\n","# '시간' 열을 업데이트\n","df_expanded['시간'] = time_range\n","\n","df_expanded"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"h75J6IBewRKT","executionInfo":{"status":"ok","timestamp":1688778090703,"user_tz":-540,"elapsed":306,"user":{"displayName":"정민균","userId":"02008085652330605669"}},"outputId":"8c8c56d0-d46e-43ad-b3d4-cfc94d933758"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                         시간 태양광 발전량(MWh)\n","0       2013-01-01 00:00:00          0.0\n","1       2013-01-01 00:05:00          0.0\n","2       2013-01-01 00:10:00          0.0\n","3       2013-01-01 00:15:00          0.0\n","4       2013-01-01 00:20:00          0.0\n","...                     ...          ...\n","1077691 2023-03-31 23:35:00     0.185993\n","1077692 2023-03-31 23:40:00     0.185993\n","1077693 2023-03-31 23:45:00     0.185993\n","1077694 2023-03-31 23:50:00     0.185993\n","1077695 2023-03-31 23:55:00     0.185993\n","\n","[1077696 rows x 2 columns]"],"text/html":["\n","  <div id=\"df-7477832b-ce85-402e-a828-9d19c895ff80\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>시간</th>\n","      <th>태양광 발전량(MWh)</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2013-01-01 00:00:00</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2013-01-01 00:05:00</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2013-01-01 00:10:00</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2013-01-01 00:15:00</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2013-01-01 00:20:00</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1077691</th>\n","      <td>2023-03-31 23:35:00</td>\n","      <td>0.185993</td>\n","    </tr>\n","    <tr>\n","      <th>1077692</th>\n","      <td>2023-03-31 23:40:00</td>\n","      <td>0.185993</td>\n","    </tr>\n","    <tr>\n","      <th>1077693</th>\n","      <td>2023-03-31 23:45:00</td>\n","      <td>0.185993</td>\n","    </tr>\n","    <tr>\n","      <th>1077694</th>\n","      <td>2023-03-31 23:50:00</td>\n","      <td>0.185993</td>\n","    </tr>\n","    <tr>\n","      <th>1077695</th>\n","      <td>2023-03-31 23:55:00</td>\n","      <td>0.185993</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1077696 rows × 2 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7477832b-ce85-402e-a828-9d19c895ff80')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-7477832b-ce85-402e-a828-9d19c895ff80 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-7477832b-ce85-402e-a828-9d19c895ff80');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":41}]},{"cell_type":"code","source":["df_expanded['태양광 발전량(MWh)'] = df_expanded['태양광 발전량(MWh)'].apply(lambda x: round(x, 4))\n","\n","df_expanded.to_csv('/content/drive/MyDrive/2023 겨울학기 + 여름학기/B.I Contest/데이터/최종 데이터/N_Est_SunPow_df.csv')\n","\n","df_expanded"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"X00o9GVXwxaD","executionInfo":{"status":"ok","timestamp":1688778097436,"user_tz":-540,"elapsed":6,"user":{"displayName":"정민균","userId":"02008085652330605669"}},"outputId":"0ce6e9a7-1bf2-446d-efa2-786556c46c14"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                         시간  태양광 발전량(MWh)\n","0       2013-01-01 00:00:00         0.000\n","1       2013-01-01 00:05:00         0.000\n","2       2013-01-01 00:10:00         0.000\n","3       2013-01-01 00:15:00         0.000\n","4       2013-01-01 00:20:00         0.000\n","...                     ...           ...\n","1077691 2023-03-31 23:35:00         0.186\n","1077692 2023-03-31 23:40:00         0.186\n","1077693 2023-03-31 23:45:00         0.186\n","1077694 2023-03-31 23:50:00         0.186\n","1077695 2023-03-31 23:55:00         0.186\n","\n","[1077696 rows x 2 columns]"],"text/html":["\n","  <div id=\"df-24d51472-314d-4b65-8b15-509c306e03f2\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>시간</th>\n","      <th>태양광 발전량(MWh)</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2013-01-01 00:00:00</td>\n","      <td>0.000</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2013-01-01 00:05:00</td>\n","      <td>0.000</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2013-01-01 00:10:00</td>\n","      <td>0.000</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2013-01-01 00:15:00</td>\n","      <td>0.000</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2013-01-01 00:20:00</td>\n","      <td>0.000</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1077691</th>\n","      <td>2023-03-31 23:35:00</td>\n","      <td>0.186</td>\n","    </tr>\n","    <tr>\n","      <th>1077692</th>\n","      <td>2023-03-31 23:40:00</td>\n","      <td>0.186</td>\n","    </tr>\n","    <tr>\n","      <th>1077693</th>\n","      <td>2023-03-31 23:45:00</td>\n","      <td>0.186</td>\n","    </tr>\n","    <tr>\n","      <th>1077694</th>\n","      <td>2023-03-31 23:50:00</td>\n","      <td>0.186</td>\n","    </tr>\n","    <tr>\n","      <th>1077695</th>\n","      <td>2023-03-31 23:55:00</td>\n","      <td>0.186</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1077696 rows × 2 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-24d51472-314d-4b65-8b15-509c306e03f2')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-24d51472-314d-4b65-8b15-509c306e03f2 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-24d51472-314d-4b65-8b15-509c306e03f2');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":43}]}]}